{"version":3,"sources":["../src/index.js"],"names":["log","Log","component","EthBlock","props","number","undefined","timestamp","_byHash","forEach","fn","bind","evt","hash","transactionHash","Error","toLowerCase","bundle","debug","EventBundle","blockNumber","addEvent","_","values","_events","_byName","push","ex","event","Array","isArray","a","length"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;;;AAEA,IAAMA,MAAM,IAAIC,sBAAJ,CAAQ,EAACC,WAAW,UAAZ,EAAR,CAAZ;;IAEqBC,Q;AACnB,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,SAAKC,MAAL,GAAcD,QAAMA,MAAMC,MAAZ,GAAmBC,SAAjC;AACA,SAAKC,SAAL,GAAiBH,QAAMA,MAAMG,SAAZ,GAAsBD,SAAvC;;AAEA,SAAKE,OAAL,GAAe,EAAf;AACA,KACE,UADF,EAEEC,OAFF,CAEU;AAAA,aAAI,MAAKC,EAAL,IAAS,MAAKA,EAAL,EAASC,IAAT,CAAc,KAAd,CAAb;AAAA,KAFV;AAGD;;;;6BAYQC,G,EAAK;AACZ,UAAIC,OAAOD,IAAIE,eAAf;AACA,UAAG,CAACD,IAAJ,EAAU;AACR,cAAM,IAAIE,KAAJ,CAAU,kCAAV,CAAN;AACD;AACDF,aAAOA,KAAKG,WAAL,EAAP;AACA,UAAIC,SAAS,KAAKT,OAAL,CAAaK,IAAb,CAAb;AACA,UAAG,CAACI,MAAJ,EAAY;AACVjB,YAAIkB,KAAJ,CAAU,gCAAV,EAA4CL,IAA5C;AACAI,iBAAS,IAAIE,WAAJ,CAAgB;AACvBL,2BAAiBD,IADM;AAEvBO,uBAAa,KAAKf,MAFK;AAGvBE,qBAAW,KAAKA;AAHO,SAAhB,CAAT;AAKA,aAAKC,OAAL,CAAaK,IAAb,IAAqBI,MAArB;AACD;AACDA,aAAOI,QAAP,CAAgBT,GAAhB;AACD;;;wBA3Ba;AACZ,aAAOU,iBAAEC,MAAF,CAAS,KAAKf,OAAd,CAAP;AACD;;;wBAEY;AACX,0BACK,KAAKA,OADV;AAGD;;;;;;kBAnBkBL,Q;;IAyCfgB,W;AACJ,uBAAYf,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,SAAKU,eAAL,GAAuBV,MAAMU,eAA7B;AACA,SAAKM,WAAL,GAAmBhB,MAAMgB,WAAzB;AACA,SAAKb,SAAL,GAAiBH,MAAMG,SAAvB;;AAEA,SAAKiB,OAAL,GAAe,EAAf;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,KACE,UADF,EAEEhB,OAFF,CAEU;AAAA,aAAI,OAAKC,EAAL,IAAS,OAAKA,EAAL,EAASC,IAAT,CAAc,MAAd,CAAb;AAAA,KAFV;AAGD;;;;6BAEQC,G,EAAK;AACZ,WAAKY,OAAL,CAAaE,IAAb,CAAkBd,GAAlB;AACA,UAAIe,KAAK,KAAKF,OAAL,CAAab,IAAIgB,KAAjB,CAAT;AACA,UAAGD,EAAH,EAAO;AACL3B,YAAIkB,KAAJ,CAAU,iBAAV,EAA6BN,IAAIgB,KAAjC,EAAwC,sCAAxC;AACA,YAAG,CAACC,MAAMC,OAAN,CAAcH,EAAd,CAAJ,EAAuB;AACrB,cAAII,IAAI,CAACJ,EAAD,EAAKf,GAAL,CAAR;AACA,eAAKa,OAAL,CAAab,IAAIgB,KAAjB,IAA0BG,CAA1B;AACD,SAHD,MAGO;AACLJ,aAAGD,IAAH,CAAQd,GAAR;AACD;AACF,OARD,MAQO;AACLZ,YAAIkB,KAAJ,CAAU,yBAAV,EAAqCN,IAAIgB,KAAzC;AACA,aAAKH,OAAL,CAAab,IAAIgB,KAAjB,IAA0BhB,GAA1B;AACD;AACF;;;wBAEY;AACX,aAAO,KAAKY,OAAL,CAAaQ,MAApB;AACD;;;wBAEe;AACd,aAAO,KAAKR,OAAZ;AACD;;;wBAEY;AACX,0BACK,KAAKC,OADV;AAGD","file":"index.js","sourcesContent":["import _ from 'lodash';\nimport Log from 'stream-logger';\n\nconst log = new Log({component: \"EthBlock\"});\n\nexport default class EthBlock {\n  constructor(props) {\n    this.number = props?props.number:undefined;\n    this.timestamp = props?props.timestamp:undefined;\n\n    this._byHash = {};\n    [\n      'addEvent'\n    ].forEach(fn=>this[fn]=this[fn].bind(this));\n  }\n\n  get bundles() {\n    return _.values(this._byHash);\n  }\n\n  get byHash() {\n    return {\n      ...this._byHash\n    }\n  }\n\n  addEvent(evt) {\n    let hash = evt.transactionHash;\n    if(!hash) {\n      throw new Error(\"Missing transactionHash in event\");\n    }\n    hash = hash.toLowerCase();\n    let bundle = this._byHash[hash];\n    if(!bundle) {\n      log.debug(\"Creating event bundle for hash\", hash);\n      bundle = new EventBundle({\n        transactionHash: hash,\n        blockNumber: this.number,\n        timestamp: this.timestamp\n      });\n      this._byHash[hash] = bundle;\n    }\n    bundle.addEvent(evt);\n  }\n}\n\nclass EventBundle {\n  constructor(props) {\n    this.transactionHash = props.transactionHash;\n    this.blockNumber = props.blockNumber;\n    this.timestamp = props.timestamp;\n\n    this._events = [];\n    this._byName = {};\n    [\n      'addEvent'\n    ].forEach(fn=>this[fn]=this[fn].bind(this));\n  }\n\n  addEvent(evt) {\n    this._events.push(evt);\n    let ex = this._byName[evt.event];\n    if(ex) {\n      log.debug(\"Event with name\", evt.event, \"matches existing item with same name\");\n      if(!Array.isArray(ex)) {\n        let a = [ex, evt];\n        this._byName[evt.event] = a;\n      } else {\n        ex.push(evt);\n      }\n    } else {\n      log.debug(\"Storing event with name\", evt.event);\n      this._byName[evt.event] = evt;\n    }\n  }\n\n  get length() {\n    return this._events.length;\n  }\n\n  get allEvents() {\n    return this._events;\n  }\n\n  get byName() {\n    return {\n      ...this._byName\n    }\n  }\n}\n"]}