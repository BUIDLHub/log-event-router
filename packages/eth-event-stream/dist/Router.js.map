{"version":3,"sources":["../src/Router.js"],"names":["Router","props","globalHandlers","contextHandlers","errorHandler","forEach","fn","bind","args","length","context","shift","ex","push","a","ctx","txn","transaction","i","h","outTxn","process","fnCtx","fnContext","tgt"],"mappings":";;;;;;;;;;;;;;IACqBA,M;AACnB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,YAAL,GAAoBH,MAAMG,YAA1B;;AAEA,KACE,KADF,EAEE,SAFF,EAGEC,OAHF,CAGU;AAAA,aAAI,MAAKC,EAAL,IAAS,MAAKA,EAAL,EAASC,IAAT,CAAc,KAAd,CAAb;AAAA,KAHV;AAID;;;;0BAEY;AAAA,wCAANC,IAAM;AAANA,YAAM;AAAA;;AACX,UAAGA,KAAKC,MAAL,KAAgB,CAAnB,EAAsB;AACpB,eAAO,IAAP;AACD;AACD,UAAIC,UAAUF,KAAKG,KAAL,EAAd;AACA,UAAG,OAAOD,OAAP,KAAmB,QAAtB,EAAgC;AAC9B,YAAIE,KAAK,KAAKT,eAAL,CAAqBO,OAArB,KAAiC,EAA1C;AACAF,aAAKH,OAAL,CAAa;AAAA,iBAAGO,GAAGC,IAAH,CAAQC,CAAR,CAAH;AAAA,SAAb;AACA,aAAKX,eAAL,CAAqBO,OAArB,IAAgCE,EAAhC;AACD,OAJD,MAIO;AACL,aAAKV,cAAL,CAAoBW,IAApB,CAAyBH,OAAzB;AACD;AACD,aAAO,IAAP;AACD;;;;0FAEaK,G,EAAKC,G;;;;;;;;AAEjBD,mCACKA,GADL;AAEEE,+BAAaD;AAFf;;;AAMUE,iB,GAAE,C;;;sBAAEA,IAAE,KAAKhB,cAAL,CAAoBO,M;;;;;AAC5BU,iB,GAAI,KAAKjB,cAAL,CAAoBgB,CAApB,C;AACJE,sB,GAAS,I;;sBACV,OAAOD,CAAP,KAAa,U;;;;;;uBACCA,EAAEJ,GAAF,C;;;AAAfK,sB;;;;;sBACQ,OAAOD,EAAEE,OAAT,KAAqB,U;;;;;;uBACdF,EAAEE,OAAF,CAAUN,GAAV,C;;;AAAfK,sB;;;AAEF,oBAAGA,MAAH,EAAW;AACTL,sBAAIE,WAAJ,GAAkBG,MAAlB;AACD;;;AAVsC,kBAAEF,C;;;;;AAYvCI,qB,GAAQP,IAAIE,WAAJ,CAAgBM,S;;qBACzBD,K;;;;;AACGE,mB,GAAM,KAAKrB,eAAL,CAAqBmB,KAArB,C;;qBACPE,G;;;;;AACON,kB,GAAE,C;;;sBAAEA,KAAEM,IAAIf,M;;;;;AACZU,kB,GAAIK,IAAIN,EAAJ,C;AACJE,uB,GAAS,I;;sBACV,OAAOD,EAAP,KAAa,U;;;;;;uBACCA,GAAEJ,GAAF,C;;;AAAfK,uB;;;;;sBACQ,OAAOD,GAAEE,OAAT,KAAqB,U;;;;;;uBACdF,GAAEE,OAAF,CAAUN,GAAV,C;;;AAAfK,uB;;;AAEF,oBAAGA,OAAH,EAAW;AACTL,sBAAIE,WAAJ,GAAkBG,OAAlB;AACD;;;AAVsB,kBAAEF,E;;;;;;;;;;;;AAgB/B,oBAAG,KAAKd,YAAR,EAAsB;AACpB,uBAAKA,YAAL;AACD;;;;;;;;;;;;;;;;;;;;;kBArEcJ,M","file":"Router.js","sourcesContent":["\nexport default class Router {\n  constructor(props) {\n    this.globalHandlers = [];\n    this.contextHandlers = {};\n    this.errorHandler = props.errorHandler;\n\n    [\n      'use',\n      'process'\n    ].forEach(fn=>this[fn]=this[fn].bind(this));\n  }\n\n  use(...args) {\n    if(args.length === 0) {\n      return this;\n    }\n    let context = args.shift();\n    if(typeof context === 'string') {\n      let ex = this.contextHandlers[context] || [];\n      args.forEach(a=>ex.push(a));\n      this.contextHandlers[context] = ex;\n    } else {\n      this.globalHandlers.push(context);\n    }\n    return this;\n  }\n\n  async process(ctx, txn) {\n\n    ctx = {\n      ...ctx,\n      transaction: txn\n    };\n\n    try {\n      for(let i=0;i<this.globalHandlers.length;++i) {\n        let h = this.globalHandlers[i];\n        let outTxn = null;\n        if(typeof h === 'function') {\n          outTxn = await h(ctx);\n        } else if(typeof h.process === 'function') {\n          outTxn = await h.process(ctx);\n        }\n        if(outTxn) {\n          ctx.transaction = outTxn;\n        }\n      }\n      let fnCtx = ctx.transaction.fnContext;\n      if(fnCtx) {\n        let tgt = this.contextHandlers[fnCtx];\n        if(tgt) {\n          for(let i=0;i<tgt.length;++i) {\n            let h = tgt[i];\n            let outTxn = null;\n            if(typeof h === 'function') {\n              outTxn = await h(ctx);\n            } else if(typeof h.process === 'function') {\n              outTxn = await h.process(ctx);\n            }\n            if(outTxn) {\n              ctx.transaction = outTxn;\n            }\n          }\n        }\n      }\n\n    } catch (e) {\n      if(this.errorHandler) {\n        this.errorHandler(e);\n      }\n    }\n  }\n}\n"]}