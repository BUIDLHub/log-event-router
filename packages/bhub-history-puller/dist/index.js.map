{"version":3,"sources":["../src/index.js"],"names":["DEFAULT_HOST","ENDPOINT","log","Log","component","BHubHistoryPuller","props","abi","apiKey","host","queryHost","bhubUrl","web3Factory","Array","isArray","Error","puller","Puller","forEach","fn","bind","callback","fromBlock","toBlock","contract","eventName","options","pullEvents","getPastEvents","config","_getEvents","eventSigs","sigs","fnSigs","a","type","signature","web3","info","address","method","url","data","network","r","eMsg","_","get","hits","length","allEvents","i","h","logs","topics","l","addr","logIndex","def","shift","startsWith","eth","decodeLog","inputs","keys","d","k","_ethersType","toString","push","blockNumber","event","name","transactionHash","transactionIndex","returnValues"],"mappings":"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","file":"index.js","sourcesContent":["import axios from 'axios';\nimport Log from 'stream-logger';\nimport _ from 'lodash';\nimport EthBlock from 'eth-data';\nimport Puller from 'eth-event-puller';\n\nconst DEFAULT_HOST = \"https://buidlhub.com\";\nconst ENDPOINT = \"/api/logEvents\";\n\nconst log = new Log({component: \"BHubHistoryPuller\"});\n\nexport default class BHubHistoryPuller {\n  constructor(props) {\n    this.abi = props.abi;\n    this.apiKey = props.apiKey;\n    this.host = props.queryHost || DEFAULT_HOST;\n    this.bhubUrl = this.host + ENDPOINT;\n\n    this.web3Factory = props.web3Factory;\n\n    if(!Array.isArray(this.abi)) {\n      throw new Error(\"Expected ABI to be an array of definitions\");\n    }\n    if(!this.apiKey) {\n      throw new Error(\"Expecting valid BUIDLHub API key\");\n    }\n\n    if(typeof this.web3Factory !== 'function') {\n      throw new Error(\"Expected a web3 factory function\");\n    }\n\n    this.puller = new Puller();\n\n    [\n      'recoverEvents',\n      '_getEvents'\n    ].forEach(fn=>this[fn]=this[fn].bind(this));\n  }\n\n  recoverEvents({\n    fromBlock,\n    toBlock,\n    contract,\n    eventName,\n    options\n  }, callback) {\n    return this.puller.pullEvents({\n      fromBlock,\n      toBlock,\n      eventName,\n      options,\n      contract: {\n        getPastEvents: (eventName, config) => {\n          return this._getEvents({\n            ...config,\n            contract\n          })\n        }\n      }\n    }, callback);\n  }\n\n  async _getEvents({\n    fromBlock,\n    toBlock,\n    eventName,\n    options,\n    contract\n  }) {\n\n    if(fromBlock > toBlock) {\n      throw new Error(\"From block comes before To block\");\n    }\n\n    if(!this.eventSigs) {\n      let sigs = {};\n      let fnSigs = {};\n      this.abi.forEach(a=>{\n        if(a.type === 'event') {\n          if(!a.signature) {\n            throw new Error(\"ABI is missing sigature fields. Use web3.eth.Contract to assign signature to fields\");\n          }\n          sigs[a.signature] = a;\n        } else if(a.type === 'function') {\n          if(!a.signature) {\n            throw new Error(\"ABI is missing sigature fields. Use web3.eth.Contract to assign signature to fields\");\n          }\n          fnSigs[a.signature] = a;\n        }\n      });\n      this.fnSigs = fnSigs;\n      this.eventSigs = sigs;\n    }\n\n    let web3 = this.web3Factory();\n    log.info(\"Pulling history from url\", this.bhubUrl);\n    log.info(\"Pulling history in range\", fromBlock, \" - \", toBlock, \" with address\", contract.options.address);\n    let r = await axios({\n      method: \"POST\",\n      url: this.bhubUrl,\n      data: {\n        fromBlock,\n        toBlock,\n        address: contract.options.address,\n        network: 1, //only supports MAIN net right now\n        apiKey: this.apiKey\n      }\n    });\n    let eMsg = _.get(r, \"data.error\");\n    if(eMsg) {\n      throw new Error(eMsg);\n    }\n\n    let hits = _.get(r, \"data.hits\", []);\n    log.info(\"received\", hits.length,\"events from BHub\");\n    let allEvents = [];\n\n    for(let i=0;i<hits.length;++i) {\n      let h = hits[i];\n      h.logs.forEach(l=>{\n        let topics = l.topics;\n        let data = l.data;\n        let addr = l.address;\n        let logIndex = l.logIndex;\n        let def = this.eventSigs[topics[0]];\n        if(def) {\n          topics.shift();\n          if(data && !data.startsWith(\"0x\")) {\n            data = \"0x\" + data;\n          }\n          let r = web3.eth.abi.decodeLog(def.inputs, data, topics);\n          _.keys(r).forEach(k=>{\n            let d = r[k];\n            if(d._ethersType === 'BigNumber') {\n              r[k] = d.toString();\n            }\n          });\n          allEvents.push({\n            blockNumber: h.blockNumber,\n            event: def.name,\n            transactionHash: h.transactionHash,\n            transactionIndex: h.transactionIndex,\n            logIndex: logIndex,\n            address: addr,\n            returnValues: r\n          });\n        }\n      });\n    }\n    return allEvents;\n  }\n\n}\n"]}